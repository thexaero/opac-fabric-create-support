plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
	maven { url = "https://api.modrinth.com/maven" } // LazyDFU, Suggestion Tweaker
	maven { url = "https://maven.tterrag.com/" } // Registrate and Flywheel
	maven { url = "https://maven.cafeteria.dev" } // Fake Player API
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, fabric ASM
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	implementation 'com.electronwill.night-config:core:3.6.3'
	implementation 'com.electronwill.night-config:toml:3.6.3'
	modImplementation "curse.maven:forgeconfigfabric-547434:3671141"//source: https://github.com/Fuzss/forgeconfigapiport-fabric
	modImplementation("com.simibubi:Create:${project.create_version}") { transitive = false }
	modImplementation("io.github.fabricators_of_create:Porting-Lib:${project.port_lib_version}+${project.minecraft_version}-dev.${project.port_lib_hash}")
	modImplementation("me.alphamode:ForgeTags:${project.forge_tags_version}")
	modImplementation("com.tterrag.registrate:Registrate:${project.registrate_version}")
	modImplementation("com.jozufozu.flywheel:Flywheel-Fabric:${project.flywheel_version}")
	modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}")
	modImplementation("dev.cafeteria:fake-player-api:${project.fake_player_api_version}")
	modImplementation("io.github.tropheusj:milk-lib:${project.milk_lib_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	exclude("xaero/pac/common/**")

	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

tasks.withType(Jar).configureEach {
	from(rootDir){
		include 'LICENSE'
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
